{"ast":null,"code":"var _jsxFileName = \"/Users/gaganbhullar/Desktop/Reactjs Project/task_management/src/ToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './ToDo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ToDo = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(null);\n  const openModal = (index = null) => {\n    if (index !== null) {\n      setTask(tasks[index].text);\n      setIsEditing(true);\n      setCurrentTaskIndex(index);\n    }\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setTask('');\n    setIsEditing(false);\n    setCurrentTaskIndex(null);\n    setIsModalOpen(false);\n  };\n  const handleChange = e => {\n    setTask(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (task.trim()) {\n      if (isEditing) {\n        const newTasks = tasks.map((taskItem, index) => index === currentTaskIndex ? {\n          ...taskItem,\n          text: task\n        } : taskItem);\n        setTasks(newTasks);\n      } else {\n        setTasks([...tasks, {\n          text: task,\n          completed: false\n        }]);\n      }\n      closeModal();\n    }\n  };\n  const handleComplete = index => {\n    const newTasks = tasks.map((taskItem, i) => i === index ? {\n      ...taskItem,\n      completed: !taskItem.completed\n    } : taskItem);\n    setTasks(newTasks);\n  };\n  const handleDelete = index => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => openModal(),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((taskItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: taskItem.completed ? 'line-through' : 'none'\n        },\n        children: [taskItem.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleComplete(index),\n          children: taskItem.completed ? 'Undo' : 'Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openModal(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"Task Modal\",\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isEditing ? 'Edit Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task,\n          onChange: handleChange,\n          placeholder: \"Enter task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isEditing ? 'Update Task' : 'Add Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDo, \"HdtpK+JbhMoG+kzSs33v6vXTabM=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","setAppElement","ToDo","_s","tasks","setTasks","task","setTask","isModalOpen","setIsModalOpen","isEditing","setIsEditing","currentTaskIndex","setCurrentTaskIndex","openModal","index","text","closeModal","handleChange","e","target","value","handleSubmit","preventDefault","trim","newTasks","map","taskItem","completed","handleComplete","i","handleDelete","filter","_","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","textDecoration","isOpen","onRequestClose","contentLabel","className","overlayClassName","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/gaganbhullar/Desktop/Reactjs Project/task_management/src/ToDo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport './ToDo.css';\n\nModal.setAppElement('#root');\n\nconst ToDo = () => {\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(null);\n\n  const openModal = (index = null) => {\n    if (index !== null) {\n      setTask(tasks[index].text);\n      setIsEditing(true);\n      setCurrentTaskIndex(index);\n    }\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setTask('');\n    setIsEditing(false);\n    setCurrentTaskIndex(null);\n    setIsModalOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setTask(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (task.trim()) {\n      if (isEditing) {\n        const newTasks = tasks.map((taskItem, index) =>\n          index === currentTaskIndex ? { ...taskItem, text: task } : taskItem\n        );\n        setTasks(newTasks);\n      } else {\n        setTasks([...tasks, { text: task, completed: false }]);\n      }\n      closeModal();\n    }\n  };\n\n  const handleComplete = (index) => {\n    const newTasks = tasks.map((taskItem, i) =>\n      i === index ? { ...taskItem, completed: !taskItem.completed } : taskItem\n    );\n    setTasks(newTasks);\n  };\n\n  const handleDelete = (index) => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div>\n      <h1>Task Manage</h1>\n      <button onClick={() => openModal()}>Add Task</button>\n      <ul>\n        {tasks.map((taskItem, index) => (\n          <li key={index} style={{ textDecoration: taskItem.completed ? 'line-through' : 'none' }}>\n            {taskItem.text}\n            <button onClick={() => handleComplete(index)}>\n              {taskItem.completed ? 'Undo' : 'Complete'}\n            </button>\n            <button onClick={() => openModal(index)}>Edit</button>\n            <button onClick={() => handleDelete(index)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Task Modal\"\n        className=\"modal\"\n        overlayClassName=\"overlay\"\n      >\n        <h2>{isEditing ? 'Edit Task' : 'Add Task'}</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={task}\n            onChange={handleChange}\n            placeholder=\"Enter task\"\n          />\n          <button type=\"submit\">{isEditing ? 'Update Task' : 'Add Task'}</button>\n          <button type=\"button\" onClick={closeModal}>Cancel</button>\n        </form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ToDo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}